Мотивация

Используемая нами Яндекс Метрика не дает представлений о полном пути запросов пользователя.
Также мы не можем полагаться на нее при отслеживания внутренних процессов в системе.
Все это приводит к рискам и затратам команды со стороны разработки, тестирования и сопровождения:
- усложняет отладку и понимание проблемы, когда случаются ошибки
- нет понимания используемости наших ресурсов, нельзя оперативно принимать решения по этим показателям
- наблюдение за критичными элементами системы происходит в ручном режиме, в совокупности с
человеческим фактором критические инциденты могут остаться без должного внимания
- мы не можем оперативно оповестить наших клиентов, что что-то пошло не так

-----------------


Выбор подхода к мониторингу

Для API и Баз данных мы будем использовать «Четыре золотых сигнала», для асинхронного взаимодействия через очереди - USE

-----------------

Метрики


Перед вами список метрик. Выберите метрики, которые вы считаете нужным отслеживать. Для выбранных метрик напишите:
Зачем нужна эта метрика.
Нужны ли ярлыки для этой метрики. Если ярлыки нужны, опишите, какие именно вы планируете добавить.
Вы можете не ограничивать себя только этим списком. Если вы видите, что стоит добавить какие-то ещё метрики, — добавьте и их тоже.


Number of dead-letter-exchange letters [USE]

Сообщать о наличии сообщений в очереди, которые не смогли обработаться системой
Ярлыки: queue_name, reason


Number of message in flight [USE]

Сообщать/мастшабировать количество потребителей по сообщениям, которые были переданы, но не подтверждены как готовые


Number of requests (RPS) for internet shop API
Number of requests (RPS) for CRM API
Number of requests (RPS) for MES API

Нагрузка на каждый API
Ярлыки: endpoint, method


CPU % for shop API
CPU % for CRM API
CPU % for MES API
Memory Utilisation for shop API
Memory Utilisation for CRM API
Memory Utilisation for MES API
Memory Utilisation for shop db instance
Memory Utilisation for MES db instance
Number of connections for shop db instance
Number of connections for MES db instance

Показывают утилизацию ресурсов (CPU, memory, connections, space) - если их мало, нужно добавить, если много - можно уменьшить
Ярлыки: machine_name/pod_name, data_center, app_name


Response time (latency) for shop API
Response time (latency) for CRM API
Response time (latency) for MES API

Измерение скорости обработки запросов
Большие значения - сигнал о наличии бага, высокой стоимости выполнения или отказа
Ярлыки: endpoint, http_method, status_code


Number of HTTP 200 for shop API
Number of HTTP 200 for CRM API
Number of HTTP 200 for MES API
Number of HTTP 500 for shop API
Number of HTTP 500 for CRM API
Number of HTTP 500 for MES API
Number of HTTP 500 for shop API

Контроль ошибок/успехов
Ярлыки: endpoint, http_method, status_code


-----------------

План действий

Напишите высокоуровнево, какие задачи вы видите для реализации. Это будет драфт технического задания.
Например, «Создать инстанс time-series базы с использованием такой-то технологии».

1. Создать инстанс time-series БД с Prometheus
2. Развернуть агенов logstash и наладить конвееры, если это необходимо
2. Развернуть Grafana для визуализации данных
3. Настроить экспорт метрик
    - OpenTelemetry/Filebeat
    - rabbitmq экспортер
    - postgresql экспортер
4. Создать (импортировать) дашборды для приложений (сервисов), СУБД, очереди
5. Определить что нужно алертить, по какому каналу и кому отправлять
6.


-----------------


Дополнительное задание.

CPU %, порог 85-90% - авто масштабирование
Memory usage %, порог 90% - уведомление разработчикам/дежурным
Latency sec, порог 3 секунды - создание тикета/задачи на расследование
Dead-letter, порог 10/min - алерт разработчикам/дежурным и создание тикета/задачи
Error rate %, порог 5% - алерт разработчикам/дежурным, создание инцидента, звонок

Выберите показатели насыщенности — определите, что является пороговым значением насыщенности и
почему нужно использовать именно такие показатели. Опишите, что должно происходить в системе в случае,
если эти параметры будут превышены. Например, нужно завести тикет, добавить инстансов, написать письмо в саппорт,
добавить автоматическую «звонилку» и так далее. Если вы сдадите работу без этого пункта, это не повлияет на
проверку задания ревьюером.
